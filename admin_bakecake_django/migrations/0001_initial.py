# Generated by Django 5.2.5 on 2025-08-28 17:19

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Berries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('berries', models.IntegerField(verbose_name='Ягоды для тортика')),
                ('price', models.IntegerField(verbose_name='Доп цена')),
            ],
            options={
                'verbose_name': 'Ягоды',
                'verbose_name_plural': 'Ягоды',
            },
        ),
        migrations.CreateModel(
            name='Cake',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('image', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Фото тортика')),
                ('discription', models.CharField(max_length=1000, verbose_name='Описание')),
                ('start_price', models.IntegerField(verbose_name='Стартовая цена')),
            ],
            options={
                'verbose_name': 'Торт',
                'verbose_name_plural': 'Торты',
            },
        ),
        migrations.CreateModel(
            name='Decor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('decor', models.IntegerField(verbose_name='Декор для тортика')),
                ('price', models.IntegerField(verbose_name='Доп цена')),
            ],
            options={
                'verbose_name': 'Декор',
                'verbose_name_plural': 'Декор',
            },
        ),
        migrations.CreateModel(
            name='FormCake',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form', models.CharField(max_length=40, verbose_name='Форма тортика')),
                ('price', models.IntegerField(verbose_name='Доп цена')),
            ],
            options={
                'verbose_name': 'Форма',
                'verbose_name_plural': 'Формы',
            },
        ),
        migrations.CreateModel(
            name='LevelCake',
            fields=[
                ('count', models.IntegerField(primary_key=True, serialize=False, verbose_name='Уровень тортика')),
                ('price', models.IntegerField(verbose_name='Доп цена')),
            ],
            options={
                'verbose_name': 'Уровень',
                'verbose_name_plural': 'Уровни',
                'ordering': ['count'],
            },
        ),
        migrations.CreateModel(
            name='Promocode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, verbose_name='Названиие')),
                ('is_active', models.BooleanField(default=False, verbose_name='Активен ли')),
                ('discount', models.IntegerField(default=10, verbose_name='Скидка %')),
            ],
            options={
                'verbose_name': 'Промокод',
                'verbose_name_plural': 'Промокоды',
            },
        ),
        migrations.CreateModel(
            name='Topping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topping', models.IntegerField(verbose_name='Топинг для тортика')),
                ('price', models.IntegerField(verbose_name='Доп цена')),
            ],
            options={
                'verbose_name': 'Топпинг',
                'verbose_name_plural': 'Топинги',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id_tg', models.BigIntegerField(primary_key=True, serialize=False, unique=True, verbose_name='Id аккаунта')),
                ('user_name', models.CharField(max_length=100, verbose_name='Логин')),
                ('phone', models.CharField(blank=True, max_length=11, null=True, validators=[django.core.validators.RegexValidator('^(7|8)\\d{10}$')], verbose_name='Номер телефона')),
                ('registered_at', models.DateTimeField(verbose_name='Дата и время регистрации')),
                ('ad', models.BooleanField(default=False, verbose_name='С рекламы')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deliverd', models.BooleanField(default=False, verbose_name='Доставлен')),
                ('comment', models.CharField(blank=True, max_length=500, null=True, verbose_name='Пожелания')),
                ('inscription', models.CharField(blank=True, max_length=20, null=True, verbose_name='Надпись на тортик')),
                ('config_cake', models.CharField(max_length=500, verbose_name=' тортика')),
                ('odred_date', models.DateTimeField(verbose_name='Время заказа')),
                ('price', models.IntegerField(verbose_name='Итоговая сумма заказа')),
                ('berries', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order', to='admin_bakecake_django.berries', verbose_name='Ягоды')),
                ('cake', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='admin_bakecake_django.cake', verbose_name='Торт')),
                ('decor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order', to='admin_bakecake_django.decor', verbose_name='Декор')),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order', to='admin_bakecake_django.formcake', verbose_name='Форма тортика')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order', to='admin_bakecake_django.levelcake', verbose_name='Кол-во уровней')),
                ('topping', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order', to='admin_bakecake_django.topping', verbose_name='Топпинг')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='admin_bakecake_django.user', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
                'ordering': ['-odred_date'],
            },
        ),
    ]
